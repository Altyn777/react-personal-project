// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
<Scheduler>
  <section
    className="scheduler"
  >
    <main>
      <Spinner
        isSpinning={true}
      >
        <div
          className="spinner"
        />
      </Spinner>
      <header>
        <h1
          className="test"
        >
          Планировщик задач
        </h1>
        <input
          onChange={[Function]}
          placeholder="Поиск"
          type="search"
          value=""
        />
      </header>
      <section>
        <form
          onSubmit={[Function]}
        >
          <input
            className="createTask"
            maxLength={50}
            onChange={[Function]}
            placeholder="Описaние моей новой задачи"
            type="text"
            value=""
          />
          <button>
            Добавить задачу
          </button>
        </form>
        <div
          className="overlay"
        >
          <ul>
            <FlipMovePropConverter
              delay={0}
              disableAllAnimations={false}
              duration={400}
              easing="ease-in-out"
              enterAnimation="elevator"
              getPosition={[Function]}
              leaveAnimation="elevator"
              maintainContainerHeight={false}
              staggerDelayBy={0}
              staggerDurationBy={0}
              typeName="div"
              verticalAlignment="top"
            >
              <FlipMove
                delay={0}
                delegated={
                  Object {
                    "style": Object {
                      "position": "relative",
                    },
                  }
                }
                disableAllAnimations={false}
                duration={400}
                easing="ease-in-out"
                enterAnimation={
                  Object {
                    "from": Object {
                      "opacity": "0",
                      "transform": "scale(0)",
                    },
                    "to": Object {
                      "opacity": "",
                      "transform": "",
                    },
                  }
                }
                getPosition={[Function]}
                leaveAnimation={
                  Object {
                    "from": Object {
                      "opacity": "1",
                      "transform": "scale(1)",
                    },
                    "to": Object {
                      "opacity": "0",
                      "transform": "scale(0)",
                    },
                  }
                }
                maintainContainerHeight={false}
                staggerDelayBy={0}
                staggerDurationBy={0}
                typeName="div"
                verticalAlignment="top"
              >
                <div
                  style={
                    Object {
                      "position": "relative",
                    }
                  }
                />
              </FlipMove>
            </FlipMovePropConverter>
          </ul>
        </div>
      </section>
      <footer>
        <withSvg(Checkbox)
          checked={true}
          color1="#363636"
          color2="#fff"
          height={25}
          onClick={[Function]}
          width={25}
        >
          <div
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "display": "block",
                "height": 25,
                "width": 25,
              }
            }
          >
            <svg
              style={
                Object {
                  "display": "block",
                  "height": 25,
                  "width": 25,
                }
              }
              version="1.1"
              viewBox="0 0 27 27"
            >
              <Checkbox
                checked={true}
                color1="#363636"
                color2="#fff"
                hover={false}
                onClick={[Function]}
              >
                <g>
                  <rect
                    fill="#363636"
                    height="25"
                    rx="5"
                    ry="5"
                    stroke="#363636"
                    style={
                      Object {
                        "strokeWidth": 2,
                      }
                    }
                    width="25"
                    x="1"
                    y="1"
                  />
                  <path
                    d="M22.12 6c-3.12 3.16-6.84 6.36-10.23 9.64l-5.42-4.05L4 14.84l6.78 5.08L12.23 21l1.25-1.25C17 16.2 21.29 12.6 25 8.89z"
                    fill="#fff"
                  />
                </g>
              </Checkbox>
            </svg>
          </div>
        </withSvg(Checkbox)>
        <span
          className="completeAllTasks"
        >
          Все задачи выполнены
        </span>
      </footer>
    </main>
  </section>
</Scheduler>
`;
